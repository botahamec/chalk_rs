var searchIndex={};
searchIndex["chalk_rs"] = {"doc":"A crate for terminal colors and styles","i":[[3,"Chalk","chalk_rs","",null,null],[11,"new","","Creates a [`Chalk`] with a black background and a white…",0,[[],["self"]]],[11,"string","","Formats a string using the style of the given [`Chalk`].",0,[[["self"],["tostring"]],["string"]]],[11,"print","","Prints a string using the style of the given chalk.",0,[[["self"],["tostring"]],["string"]]],[11,"println","","Prints a string using the style of the given chalk on a…",0,[[["self"],["tostring"]],["string"]]],[11,"default_color","","",0,[[["self"]],["self"]]],[11,"black","","",0,[[["self"]],["self"]]],[11,"red","","",0,[[["self"]],["self"]]],[11,"green","","",0,[[["self"]],["self"]]],[11,"yellow","","",0,[[["self"]],["self"]]],[11,"blue","","",0,[[["self"]],["self"]]],[11,"magenta","","",0,[[["self"]],["self"]]],[11,"cyan","","",0,[[["self"]],["self"]]],[11,"light_gray","","",0,[[["self"]],["self"]]],[11,"light_grey","","",0,[[["self"]],["self"]]],[11,"gray","","",0,[[["self"]],["self"]]],[11,"grey","","",0,[[["self"]],["self"]]],[11,"light_black","","",0,[[["self"]],["self"]]],[11,"light_red","","",0,[[["self"]],["self"]]],[11,"light_green","","",0,[[["self"]],["self"]]],[11,"light_yellow","","",0,[[["self"]],["self"]]],[11,"light_blue","","",0,[[["self"]],["self"]]],[11,"light_magenta","","",0,[[["self"]],["self"]]],[11,"light_cyan","","",0,[[["self"]],["self"]]],[11,"white","","",0,[[["self"]],["self"]]],[11,"ansi","","",0,[[["self"],["u8"]],["self"]]],[11,"rgb","","",0,[[["self"],["u8"]],["self"]]],[11,"default_background","","",0,[[["self"]],["self"]]],[11,"bg_black","","",0,[[["self"]],["self"]]],[11,"bg_red","","",0,[[["self"]],["self"]]],[11,"bg_green","","",0,[[["self"]],["self"]]],[11,"bg_yellow","","",0,[[["self"]],["self"]]],[11,"bg_blue","","",0,[[["self"]],["self"]]],[11,"bg_magenta","","",0,[[["self"]],["self"]]],[11,"bg_cyan","","",0,[[["self"]],["self"]]],[11,"bg_light_gray","","",0,[[["self"]],["self"]]],[11,"bg_light_grey","","",0,[[["self"]],["self"]]],[11,"bg_gray","","",0,[[["self"]],["self"]]],[11,"bg_grey","","",0,[[["self"]],["self"]]],[11,"bg_light_black","","",0,[[["self"]],["self"]]],[11,"bg_light_red","","",0,[[["self"]],["self"]]],[11,"bg_light_green","","",0,[[["self"]],["self"]]],[11,"bg_light_yellow","","",0,[[["self"]],["self"]]],[11,"bg_light_blue","","",0,[[["self"]],["self"]]],[11,"bg_light_magenta","","",0,[[["self"]],["self"]]],[11,"bg_light_cyan","","",0,[[["self"]],["self"]]],[11,"bg_white","","",0,[[["self"]],["self"]]],[11,"bg_ansi","","",0,[[["self"],["u8"]],["self"]]],[11,"bg_rgb","","",0,[[["self"],["u8"]],["self"]]],[11,"reset_style","","",0,[[["self"]],["self"]]],[11,"reset_weight","","",0,[[["self"]],["self"]]],[11,"bold","","",0,[[["self"]],["self"]]],[11,"dim","","",0,[[["self"]],["self"]]],[11,"italic","","",0,[[["self"]],["self"]]],[11,"unitalic","","",0,[[["self"]],["self"]]],[11,"no_underline","","",0,[[["self"]],["self"]]],[11,"underline","","",0,[[["self"]],["self"]]],[11,"double_underline","","",0,[[["self"]],["self"]]],[11,"stop_blink","","",0,[[["self"]],["self"]]],[11,"blink","","",0,[[["self"]],["self"]]],[11,"invert","","",0,[[["self"]],["self"]]],[11,"uninvert","","",0,[[["self"]],["self"]]],[11,"hide","","",0,[[["self"]],["self"]]],[11,"unhide","","",0,[[["self"]],["self"]]],[11,"strikethrough","","",0,[[["self"]],["self"]]],[11,"unstrike","","",0,[[["self"]],["self"]]],[11,"is_normal_weight","","",0,[[["self"]],["bool"]]],[11,"is_bold","","",0,[[["self"]],["bool"]]],[11,"is_dim","","",0,[[["self"]],["bool"]]],[11,"is_italicized","","",0,[[["self"]],["bool"]]],[11,"has_underlines","","",0,[[["self"]],["bool"]]],[11,"is_single_underlined","","",0,[[["self"]],["bool"]]],[11,"is_double_underlined","","",0,[[["self"]],["bool"]]],[11,"is_blinking","","",0,[[["self"]],["bool"]]],[11,"is_inverted","","",0,[[["self"]],["bool"]]],[11,"is_hidden","","",0,[[["self"]],["bool"]]],[11,"has_strikethrough","","",0,[[["self"]],["bool"]]],[11,"num_underlines","","",0,[[["self"]],["u8"]]],[14,"enum_default","","Implements Default for an enum. Requires the enum to have…",null,null],[14,"enum_fmt_impl","","Implements a fmt trait for an enum. The output is the enum…",null,null],[14,"enum_display","","Implements the Display trait for an enum. The output is…",null,null],[14,"enum_impls","","Implements several traits for a macro ",null,null],[14,"impl_enums","","Implements several enums ",null,null],[14,"chalk_trait_fns","","adds a set of functions to the trait ",null,null],[14,"fn_alias","","Sets up an alias for a function ",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["chalk"]]],[11,"default","","",0,[[],["chalk"]]],[11,"cmp","","",0,[[["chalk"],["self"]],["ordering"]]],[11,"eq","","",0,[[["chalk"],["self"]],["bool"]]],[11,"ne","","",0,[[["chalk"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["chalk"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["chalk"],["self"]],["bool"]]],[11,"le","","",0,[[["chalk"],["self"]],["bool"]]],[11,"gt","","",0,[[["chalk"],["self"]],["bool"]]],[11,"ge","","",0,[[["chalk"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]]],"p":[[3,"Chalk"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);